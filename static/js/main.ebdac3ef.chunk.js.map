{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","goodsList","goods","visibleGoods","ALPHABET","sort","LENGTH","good1","good2","length","reverse","getReorderedGoods","isReset","isAlphabetSort","isLengthSort","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA/BD,SACLC,EACAL,EACAE,GAEA,IAAMI,EAAY,YAAOD,GAEzB,OAAQL,GACN,KAAKL,EAASY,SACZD,EAAaE,OACb,MAEF,KAAKb,EAASc,OACZH,EAAaE,MAAK,SAACE,EAAOC,GAAR,OAAkBD,EAAME,OAASD,EAAMC,UAW7D,OAJIV,GACFI,EAAaO,UAGRP,EAOWQ,CAAkBlB,EAAiBI,EAAUE,GAEzDa,EAAWb,GAAcF,IAAaL,EAASI,KAC/CiB,EAAiBhB,IAAaL,EAASY,SACvCU,EAAejB,IAAaL,EAASc,OAmB3C,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,YAAaJ,IAEfK,QArByB,WAC/BpB,EAAYN,EAASY,WAejB,iCAUA,wBACEY,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAaH,IAEfI,QA3BmB,WACzBpB,EAAYN,EAASc,SAqBjB,4BAUA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAalB,IAEfmB,QA7Cc,WACpBlB,GAAeD,IAuCX,qBAUCa,GAEG,wBACEI,KAAK,SACLD,UAAU,4BACVG,QA3CQ,WAClBlB,GAAc,GACdF,EAAYN,EAASI,OAsCb,sBAUN,6BAEIK,EAAUkB,KAAI,SAAAC,GAAI,OAChB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ebdac3ef.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPHABET:\n      visibleGoods.sort();\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods.sort((good1, good2) => good1.length - good2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const goodsList = getReorderedGoods(goodsFromServer, sortType, isReversed);\n\n  const isReset = (isReversed || sortType !== SortType.NONE);\n  const isAlphabetSort = sortType === SortType.ALPHABET;\n  const isLengthSort = sortType === SortType.LENGTH;\n\n  const handleReverse = () => {\n    setIsReversed(!isReversed);\n  };\n\n  const handleSortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortType(SortType.NONE);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames('button is-info', {\n            'is-light': !isAlphabetSort,\n          })}\n          onClick={handleSortAlphabetically}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-success', {\n            'is-light': !isLengthSort,\n          })}\n          onClick={handleSortByLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverse}\n        >\n          Reverse\n        </button>\n\n        {isReset\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {\n          goodsList.map(good => (\n            <li key={good} data-cy=\"Good\">{good}</li>\n          ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}